<?xml version="1.0" encoding="utf-8"?>
<plasterManifest schemaVersion="1.1"
                 templateType="Project"
                 xmlns="http://www.microsoft.com/schemas/PowerShell/Plaster/v1">
  <metadata>
    <name>MyPowershellProject</name>
    <id>464a849f-280f-484a-8bad-dcb65b86a494</id>
    <version>1.1.0</version>
    <title>My Scaffolding</title>
    <description>Scaffold Creates files for a simple, non-shared PowerShell script module.</description>
    <author>Plaster</author>
    <tags>Module, ScriptModule, ModuleManifest</tags>
  </metadata>
  <parameters>
        <parameter name='ModuleName'
                   type='text'
                   prompt='Enter the name of the module'/>

        <parameter name='Version'
                   type='text'
                   prompt='Enter the version number of the module'
                   default='0.1.0'/>

        <parameter name='FullName'
                   type='user-fullname'
                   prompt='Enter the name of the Author'
                   store='text' />

        <parameter name='Editor'
                   type='choice'
                   prompt='Select an editor for editor integration (or None):'
                   default='1'
                   store='text' >
            <choice label='&amp;None'
                    help="No editor specified."
                    value="None"/>
            <choice label='Visual Studio &amp;Code'
                    help="Your editor is Visual Studio Code."
                    value="VSCode"/>
        </parameter>

        <parameter name='License'
                   type='choice'
                   prompt='Select a license (see http://choosealicense.com for help choosing):'
                   default='0'
                   store='text'>
            <choice label='&amp;None'
                    help="No license."
                    value="None"/>
            <choice label='&amp;Apache'
                    help="Adds an Apache license file."
                    value="Apache"/>
            <choice label='&amp;MIT'
                    help="Adds an MIT license file."
                    value="MIT"/>
        </parameter>

        <parameter name='Options'
                   type='multichoice'
                   prompt='Select one or more of the following tooling options:'
                   default='1,2,3,4'
                   store='text' >
            <choice label='&amp;None'
                    help="No tooling options specified."
                    value="None"/>
            <choice label='Add &amp;Git .gitignore file'
                    help="Adds a .gitignore file."
                    value="Git"/>
            <choice label='Add p&amp;sake build script'
                    help="Adds psake build script that generates the module directory for publishing to the PowerShell Gallery."
                    value="psake"/>
            <choice label='Add &amp;InvokeBuild build script'
                    help="Adds InvokeBuild build script that generates the module directory for publishing to the PowerShell Gallery."
                    value="invokebuild"/>
            <choice label='Add &amp;Pester test support'
                    help="Adds test directory and Pester test for the module manifest file."
                    value="Pester"/>
            <choice label='Add PSScript&amp;Analyzer support'
                    help="Adds script analysis support using PSScriptAnalyzer."
                    value="PSScriptAnalyzer"/>
            <choice label='Add plat&amp;yPS help generation support'
                    help="Adds help build support using platyPS."
                    value="platyPS"/>
            <choice label='Add travis-CI support'
                    help="Adds configuration file for a travis-CI."
                    value="travis"/>
            <choice label='Add AppVeyor CI support'
                    help="Adds configuration file for a AppVeyor CI."
                    value="appveyor"/>
        </parameter>
  </parameters>

  <content>
        <message>&#10;&#10;Scaffolding your PowerShell Module...&#10;&#10;&#10;</message>

        <file condition='$PLASTER_PARAM_Options -contains "Git"'
              source='Repo\_gitignore'
              destination='.gitignore' />
        <file condition='$PLASTER_PARAM_Options -contains "Git"'
              source='Repo\_gitattributes.txt'
              destination='.gitattributes' />
        <file source='Repo\_editorconfig.txt'
              destination='.editorconfig' />
        <file source='Repo\CHANGELOG.md'
              destination='CHANGELOG.md'/>
        <file source='Repo\README.md'
              destination='README.md'/>
        <file condition='$PLASTER_PARAM_Options -contains "PSScriptAnalyzer"'
              source='Repo\PSScriptAnalyzerSettings.psd1'
              destination='PSScriptAnalyzerSettings.psd1'/>

        <templateFile condition="$PLASTER_PARAM_License -eq 'Apache'"
                      source='LICENSE\Apache.txt'
                      destination='LICENSE'
                      encoding="UTF8-NoBOM"/>
        <templateFile condition="$PLASTER_PARAM_License -eq 'MIT'"
                      source='LICENSE\MIT.txt'
                      destination='LICENSE' />

        <file condition='$PLASTER_PARAM_Options -contains "travis"'
              source='CI\.travis.yml'
              destination='.travis.yml' />
        <file condition='$PLASTER_PARAM_Options -contains "appveyor"'
              source='CI\appveyor.yml'
              destination='appveyor.yml' />
        <file condition='($PLASTER_PARAM_Options -contains "travis") -or ($PLASTER_PARAM_Options -contains "appveyor")'
              source='CI\setup.ps1'
              destination='Tools\setup.ps1' />
        <file condition='$PLASTER_PARAM_Options -contains "invokebuild"'
              source='CI\ModuleName.build.ps1'
              destination='${PLASTER_PARAM_ModuleName}.build.ps1' />
        <file condition='$PLASTER_PARAM_Options -contains "psake"'
              source='CI\build*.ps1'
              destination='' />

        <templateFile condition="$PLASTER_PARAM_Options -contains 'platyPS'"
                      source='docs\en-US\about_Module.help.md'
                      destination='docs\en-US\about_${PLASTER_PARAM_ModuleName}.help.md'/>
        <templateFile condition="$PLASTER_PARAM_Options -notcontains 'platyPS'"
                      source='docs\en-US\about_Module.help.txt'
                      destination='src\en-US\about_${PLASTER_PARAM_ModuleName}.help.txt'/>      

        <newModuleManifest destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}.psd1'
                           moduleVersion='$PLASTER_PARAM_Version'
                           rootModule='${PLASTER_PARAM_ModuleName}.psm1'
                           encoding='UTF8-NoBOM'
                           openInEditor="true"/>

        <file source='Module.psm1'
              destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}.psm1'
              openInEditor="true"/>

        <file source='ModuleName\ModuleName.Attributes.cs'
              destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}.Attributes.cs' />

        <file source='ModuleName\ModuleName.format.ps1xml'
              destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}.format.ps1xml' />
  
        <templateFile source='ModuleName\ModuleName.Types.cs'
              destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}.Types.cs' />

        <templateFile source='Tests\Module.T.ps1'
                      destination='Tests\${PLASTER_PARAM_ModuleName}.Tests.ps1' />

        <templateFile condition="$PLASTER_PARAM_Options -contains 'platyPS'"
                      source='docs\en-US\about_Module.help.md'
                      destination='docs\en-US\about_${PLASTER_PARAM_ModuleName}.help.md'/>
        <templateFile condition="$PLASTER_PARAM_Options -notcontains 'platyPS'"
                      source='docs\en-US\about_Module.help.txt'
                      destination='${PLASTER_PARAM_ModuleName}\en-US\about_${PLASTER_PARAM_ModuleName}.help.txt'/>

        <file condition="$PLASTER_PARAM_Editor -eq 'VSCode'"
              source='editor\.vscode\settings.json'
              destination='.vscode\settings.json' />

        <file condition="$PLASTER_PARAM_Editor -eq 'VSCode'"
              source='editor\.vscode\tasks.json'
              destination='.vscode\tasks.json' />

        <requireModule name="Pester" minimumVersion="4.0.3"
            message="Without Pester, you will not be able to run the provided Pester test to validate your module manifest file.`nWithout version 4.0.3, VS Code will not display Pester warnings and errors in the Problems panel."/>

        <message>

Your new PowerShell module project '$PLASTER_PARAM_ModuleName' has been created.

        </message>

        <message>
A Pester test has been created to validate the module's manifest file.  Add additional tests to the test directory.
You can run the Pester tests in your project by executing the 'test' task.  Press Ctrl+P, then type 'task test'.

        </message>
  </content>
</plasterManifest>
